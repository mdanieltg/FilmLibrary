@model FilmLibrary.Domain.Helper.PaginatedResult<FilmLibrary.Domain.Entities.Film>
@{ ViewData["Title"] = "Películas"; }

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Inicio</a></li>
        <li class="breadcrumb-item active">@ViewData["Title"]</li>
    </ol>
</nav>

<h2>@ViewData["Title"]</h2>

<div class="d-flex justify-content-between">
    <a asp-action="Add" class="btn btn-primary">Agregar película</a>
    <form class="d-flex" role="search">
        <input type="search" class="form-control me-2" name="search" placeholder="Búsqueda rápida" aria-label="Búsqueda"
               @{if (ViewBag.SearchString is not null) {<text>value="@ViewBag.SearchString"</text>}}>
        <input type="submit" value="Buscar" class="btn btn-success me-2">
        <a asp-action="Index" class="btn btn-secondary" asp-route-page="1" asp-route-count="10">Borrar</a>
    </form>
</div>

<div class="table-responsive">
    <table class="table table-striped align-middle">
        <thead>
        <tr>
            <th>Título</th>
            <th>Director</th>
            <th>Clasificación</th>
            <th>Año</th>
            <th>País de origen</th>
            <th>Acciones</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var film in Model.Collection)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-filmId="@film.Id">@film.Title</a>
                </td>
                <td>@film.Director?.Name</td>
                <td>@film.Rating?.Name</td>
                <td>@film.Year</td>
                <td>@film.CountryOfOrigin?.Name</td>
                <td>
                    <div class="btn-group btn-group-sm" role="group" aria-label="Edition links">
                        <a asp-action="Edit" asp-route-filmId="@film.Id" class="btn btn-outline-secondary">Editar</a>
                        <a asp-action="Delete" asp-route-filmId="@film.Id" class="btn btn-outline-secondary">Eliminar</a>
                    </div>
                </td>
            </tr>
        }
        </tbody>
        <tfoot>
        <tr>
            <td colspan="6">
                <div class="d-flex justify-content-between text-muted">
                    @await Component.InvokeAsync("RegistriesCount",
                        new { itemCount = Model.ItemCount, totalItems = Model.TotalItems })
                    @await Component.InvokeAsync("PageInformation",
                        new { currentPage = Model.CurrentPage, totalPages = Model.TotalPages })
                </div>
            </td>
        </tr>
        </tfoot>
    </table>
</div>

@await Component.InvokeAsync("PageNavigation",
    new { currentPage = Model.CurrentPage, pageSize = Model.PageSize, totalPages = Model.TotalPages, searchString = ViewBag.SearchString })
